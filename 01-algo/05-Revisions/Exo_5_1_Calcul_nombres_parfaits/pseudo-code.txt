EXERCICE 5.1 : CALCUL DES NOMBRES PARFAITS
On souhaite écrire un programme de calcul des 4 premiers nombres parfaits.

Un nombre est dit parfait s’il est égal à la somme de ses diviseurs, 1 compris.

Exemple :

6 = 1+2+3 
6 est un nombre parfait.  
L’algorithme retenu contiendra deux boucles imbriquées. Une boucle de comptage des nombres parfaits qui s’arrêtera lorsque le décompte sera atteint, la boucle interne ayant vocation à calculer tous les diviseurs du nombre examiné d’en faire la somme puis de tester l’égalité entre cette somme et le nombre.

Ecrivez le programme complet qui affiche les 4 premiers nombres parfaits.

Affichage des 4 premiers nombres parfaits :
6 est un nombre parfait.
28 est un nombre parfait.
496 est un nombre parfait.
8128 est un nombre parfait.


VARIABLES

	compteur est un entier // le compteur de nombres parfaits
	nombre est un entier 

START PROGRAM

PROCESSING

	WHILE compteur < 4

		on initialise 'someDiviseurs' la 1 parce que 1 est le diviseur de toutes les nombres et entrons dans une boucle `for' qui itérera de 2 à `nombre - 1` et calculera la somme des diviseurs de `nombre` .

	IF la somme des diviseurs est égale à `nombre`, cela signifie que nous avons trouvé un nombre parfait et que nous l'affichons à l'écran. On incrémente la variable 'compteur'.

	On incrémente la variable 'nombre' et on reinitialise 'someDiviseurs'.

END PROCESING

END PROGRAM